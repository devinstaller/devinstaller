#+TITLE:   Devinstaller
#+DATE:    May 29, 2020
#+STARTUP: inlineimages nofold
#+OPTIONS: toc:nil

* Devinstaller

#+MARKDOWN: [[_TOC_]]

* README.org :noexport:

** Exporting
Export this file into ~markdown~ format using =M-x org-gfm-export-to-markdown=.

* Table of Contents :TOC_3:noexport:
- [[#devinstaller][Devinstaller]]
- [[#usage][Usage]]
  - [[#basic][Basic]]
  - [[#specify-platform][Specify platform]]
  - [[#specify-both-platform-and-desired-preset][Specify both platform and desired preset]]
- [[#prerequisites][Prerequisites]]
  - [[#poetry][Poetry]]
- [[#develop][Develop]]
  - [[#for-developers-install-normal-and-dev-dependencies][For developers install normal and dev dependencies]]
  - [[#use-poetry-shell][Use poetry shell]]
  - [[#install-normal-dependencies][Install normal dependencies]]
  - [[#install-dev-dependencies][Install dev dependencies]]
- [[#testing-and-code-coverage][Testing and code coverage]]
  - [[#testing][Testing]]
  - [[#coverage-report][Coverage report]]
- [[#testing-using-gitlab-runner-locally][Testing using Gitlab runner locally]]
  - [[#prerequisites-1][Prerequisites]]
    - [[#docker][Docker]]
  - [[#install-gitlab-runner-locally][Install =gitlab-runner= locally]]
    - [[#macos][MacOS]]
  - [[#running-the-tests][Running the tests]]
- [[#facing-any-problems][Facing any problems]]
  - [[#issue-with-installing-poetry-packages][Issue with installing poetry packages]]
    - [[#copy-paste-this-line-into-your-bash_profile-or-zshrc][Copy paste this line into your =~/.bash_profile= or =~/.zshrc=.]]
    - [[#reinstall-python-using-brew][Reinstall Python using brew]]
- [[#git][Git]]
  - [[#more-information][More information]]
- [[#changelog][Changelog]]
  - [[#usage-1][Usage]]
  - [[#more-information-1][More information]]
- [[#full-documentation][Full Documentation]]

* Usage
** Basic

#+BEGIN_SRC sh
dev install
#+END_SRC

** Specify platform

#+BEGIN_SRC sh
dev install --platform macos  # dev install -p macos
#+END_SRC

** Specify both platform and desired preset

#+BEGIN_SRC sh
dev install --platform macos --preset doom
#+END_SRC

* Prerequisites
** Poetry
You will need ~poetry~ installed in your machine.
Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.

[[https://github.com/python-poetry/poetry][Poetry Github repository]]

Installing using

#+BEGIN_SRC sh
curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
#+END_SRC

More instructions on their Github repository.

* Develop

Before you git push a new module make sure unit tests are also
included. Test are to be written using ~pytest~.

For more information look into [[https://www.freecodecamp.org/news/test-driven-development-what-it-is-and-what-it-is-not-41fa6bca02a2/][Test Driven Development]].

** For developers install normal and dev dependencies

#+BEGIN_SRC sh
poetry install
#+END_SRC

** Use poetry shell

#+BEGIN_SRC sh
poetry shell
#+END_SRC

** Install normal dependencies

#+BEGIN_SRC sh
poetry add numpy
#+END_SRC

** Install dev dependencies

#+BEGIN_SRC sh
poetry add -D pytest
#+END_SRC
* Testing and code coverage

** Testing

Pop into poetry shell and run:

#+BEGIN_SRC sh
coverage run
#+END_SRC

** Coverage report

Generate HTML based code coverage report:

#+BEGIN_SRC sh
coverage html
#+END_SRC

* Testing using Gitlab runner locally

** Prerequisites

*** Docker
You need docker installed, because we will be using the =docker= executor for the gitlab-runner.

** Install =gitlab-runner= locally

*** MacOS

**** Install using brew

#+BEGIN_SRC
brew install gitlab-runner
#+END_SRC

**** Register it with gitlab

#+BEGIN_SRC
gitlab-runner register
#+END_SRC

**** Options

| Option                | Value                               |
|-----------------------+-------------------------------------|
| gitlab-ci coordinator | https://gitlab.com                  |
| gitlab-ci description | Enter some description              |
| gitlab-ci tags        | Enter some tags                     |
| Executer              | =docker=                            |
| default docker image  | Enter the name of some docker image |

** Running the tests

#+begin_src
gitlab-runner exec docker test
#+end_src

* Facing any problems

** Issue with installing poetry packages

Try setting LANG variable for the shell, if its not set.

*** Copy paste this line into your =~/.bash_profile= or =~/.zshrc=.

#+BEGIN_SRC sh
export $LANG = en_US.UTF-8
#+END_SRC

After this you might need to reopen the terminal.

*** Reinstall Python using brew

The default python installation from Xcode is not built using SSL support. So
you may have problem installing packages.

Reinstall python using this command on the terminal:

#+BEGIN_SRC sh
brew reinstall python
#+END_SRC

* Git

This project uses the [[https://www.conventionalcommits.org/en/v1.0.0/][Conventional git commit specs]].

** More information

[[https://devinstaller.readthedocs.io/en/latest/][Read the docs]]

* Changelog

Changelog is generated using =git-chglog=. See [[https://github.com/git-chglog/git-chglog][git-chglog]].

** Usage

#+BEGIN_SRC sh
git-chglog -o CHANGELOG.md
#+END_SRC

** More information

[[https://devinstaller.readthedocs.io/en/latest/][Read the docs]]

* Full Documentation

[[https://devinstaller.readthedocs.io/en/latest/][Read the docs]]

Docs are auto generated on new commits on the master branch
